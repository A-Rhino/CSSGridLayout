/* 
Color pallete. This section defines variables for the color pallete,
so that we can refer to particular colors by name instead of hexadecimal values.
This is applied to the 'root' psuedo-element, which just means that these color
variables are available to be used anywhere in our html document
*/
:root {
    --color1: #FFCDB2;
    --color2: #FFB4A2;
    --color3: #E5989B;
    --color4: #B5838D;
    --color5: #6D6875;
    --white-font: #FFFFFF;
    --black-font: #000000;
}

/* .team-member-card {

} */


/* Defines the main container size, we are limiting to 1140px max and centring in the viewport */
.main-container {
    max-width: 1140px;
    margin: 0 auto;
    font: 1em Helvetica, arial, sans-serif;
    color: var(--white-font);
}

/* Any direct child element of then main container looks like a post-it note, with yellow background and orange border
.main-container > * {
  border: 2px solid #f08c00;
  background-color: #ffec99;
  border-radius: 5px;
  padding: 10px;
} */

.main-container > * {
    min-height: 32px;
}
  

/* Here we define the aspects of style of our elements other than their grid layout */

.banner {
    background-color: var(--color4);
    height: 128px;
    padding: 16px;
}

.banner-title {
    font-size: 48px;
}

.banner-subtitle {
    font-size: 36px;
}

.team-member-card-panel {
    display: contents;
}

.team-member-card {
    max-width: 512px;
    height: 512px;
    background-color: var(--color3);
    display: flex;
    flex-direction: column;
    border-radius: 20px;
    overflow: hidden;
}

.team-member-card-image {
    max-width: 100%;
}

.team-member-card-blurb {
    padding: 8px;
}


.team-description {
    background-color: beige;
}

.section-header {
    background-color: var(--color5);
}

.content-card {
    background-color: var(--color2);
}


/* now we create names for the grid areas for specific elements */
#banner {
    grid-area: bn1;
}

/* #teamMemberCardPanel {
    grid-area: cp1;
} */
#teamMemberCard1 {
    grid-area: tm1;
}

#teamMemberCard2 {
    grid-area: tm2;
}

#teamMemberCard3 {
    grid-area: tm3;
}

#teamDescription {
    grid-area: td1;
}

#storiesSectionHeader {
    grid-area: sh1;
}

#storyCard1 {
    grid-area: sc1;
}

#storyCard2 {
    grid-area: sc2;
}

#storyCard3 {
    grid-area: sc3;
}


/* Use a 12 column flexible layout grid */
/* For vertical layout we use a margin, rather than grid-rows */
.main-container {
    display: grid;
    /* grid-template-columns: repeat(12, [col-start] 1fr); */
    /* grid-auto-rows: 32px; */
    column-gap: 16px;
}
  
/* 
Responsive Layout breakpoints. We start 'mobile-first' i.e. we define how the layout should look
for the smallest screen sizes. In this case we want a single column that spans the main container.
Because this CSS definition comes first, it will apply by default. Then we override it below with 
media queries for progressively bigger screen widths
*/
.main-container {
    grid-template:
        "bn1 bn1 bn1 bn1" minmax(128px, auto)
        " .   .   .   . " minmax(32px, auto)
        "tm1 tm1 tm1 tm1" minmax(512px, auto)
        " .   .   .   . " minmax(32px, auto)
        "tm2 tm2 tm2 tm2" minmax(512px, auto)
        " .   .   .   . " minmax(32px, auto)
        "tm3 tm3 tm3 tm3" minmax(512px, auto)
        " .   .   .   . " minmax(32px, auto)
        "td1 td1 td1 td1" minmax(224px, auto)
        " .   .   .   . " minmax(32px, auto)
        "sh1 sh1 sh1 sh1" minmax(128px, auto)
        " .   .   .   . " minmax(32px, auto)
        "sc1 sc1 sc1 sc1" minmax(1088px, auto)
        " .   .   .   . " minmax(32px, auto)
        "sc2 sc2 sc2 sc2" minmax(1088px, auto)
        " .   .   .   . " minmax(32px, auto)
        "sc3 sc3 sc3 sc3" minmax(1088px, auto)   
}
    


@media (min-width: 512px) {
    .main-container {
        grid-template:
        "bn1 bn1 bn1 bn1 bn1 bn1 bn1 bn1" minmax(128px, auto)
        " .   .   .   .   .   .   .   . " minmax(32px, auto)
        "tm1 tm1 tm1 tm1 tm2 tm2 tm2 tm2" minmax(512px, auto)
        " .   .   .   .   .   .   .   . " minmax(32px, auto)
        " .   .  tm3 tm3 tm3 tm3  .   . " minmax(512px, auto)
        " .   .   .   .   .   .   .   . " minmax(32px, auto)
        "td1 td1 td1 td1 td1 td1 td1 td1" minmax(224px, auto)
        " .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sh1 sh1 sh1 sh1 sh1 sh1 sh1 sh1" minmax(128px, auto)
        " .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sc1 sc1 sc1 sc1 sc1 sc1 sc1 sc1" minmax(1088px, auto)
        " .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sc2 sc2 sc2 sc2 sc2 sc2 sc2 sc2" minmax(1088px, auto)
        " .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sc3 sc3 sc3 sc3 sc3 sc3 sc3 sc3" minmax(1088px, auto)   
    }
}



@media (min-width: 800px) {
    .main-container {
        grid-template:
        "bn1 bn1 bn1 bn1 bn1 bn1 bn1 bn1 bn1 bn1 bn1 bn1" minmax(128px, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(32px, auto)
        "tm1 tm1 tm1 tm1 tm2 tm2 tm2 tm2 tm3 tm3 tm3 tm3" minmax(512px, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(32px, auto)
        "td1 td1 td1 td1 td1 td1 td1 td1 td1 td1 td1 td1" minmax(224px, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sh1 sh1 sh1 sh1 sh1 sh1 sh1 sh1 sh1 sh1 sh1 sh1" minmax(128px, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sc1 sc1 sc1 sc1 sc1 sc1 sc1 sc1 sc1 sc1 sc1 sc1" minmax(1088px, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sc2 sc2 sc2 sc2 sc2 sc2 sc2 sc2 sc2 sc2 sc2 sc2" minmax(1088px, auto)
        " .   .   .   .   .   .   .   .   .   .   .   . " minmax(32px, auto)
        "sc3 sc3 sc3 sc3 sc3 sc3 sc3 sc3 sc3 sc3 sc3 sc3" minmax(1088px, auto)   
    }
}




/* This is the default layout (single column) which will be applied to any screen width smaller than our first breakpoint */
/* .main-container > * {
    grid-column: col-start / span 12;
}
 
#banner {
    grid-row: 1 / span 4; 
}

#teamMemberCardPanel {
    grid-row: 7 / span 8;
}

#teamDescription {
    grid-row: 17 / span 7;
}

#storiesSectionHeader {
    grid-row: 26 / span 4;
}

#storyCard1 {
    grid-row: 32 / span 34;
}

#storyCard2 {
    grid-row: 68 / span 34;
}

#storyCard3 {
    grid-row: 104 / span 34;
} */





/* First breakpoint is 500px. For screens at least 500px wide we jump to two column layout */
/* @media (min-width: 500px) {
    .side {
      grid-column: col-start / span 3;
      grid-row: 3;
    }
    .ad {
      grid-column: col-start / span 3;
      grid-row: 4;
    }
    .content,
    .main-footer {
      grid-column: col-start 4 / span 9;
    }
    nav ul {
      display: flex;
      justify-content: space-between;
    }
} */
    
/* Second breakpoint is 700px. Above this we use three column layout */
/* @media (min-width: 700px) {
    .main-nav {
      grid-column: col-start / span 2;
      grid-row: 2 / 4;
    }
    .content {
      grid-column: col-start 3 / span 8;
      grid-row: 2 / 4;
    }
    .side {
      grid-column: col-start 11 / span 2;
      grid-row: 2;
    }
    .ad {
      grid-column: col-start 11 / span 2;
      grid-row: 3;
    }
    .main-footer {
      grid-column: col-start / span 12;
    }
    nav ul {
      flex-direction: column;
    }
} */
